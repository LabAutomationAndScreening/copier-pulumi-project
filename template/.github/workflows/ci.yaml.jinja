{% raw %}name: CI

on:
  push:
    branches-ignore:
      - 'gh-readonly-queue/**' # don't run (again) when on these special branches created during merge groups; the `on: merge_group` already triggers it.
  merge_group:
  pull_request:

env:
  PYTHONUNBUFFERED: True
  PRE_COMMIT_HOME: ${{ github.workspace }}/.precommit_cache

permissions:
    id-token: write
    contents: write # needed for mutex

jobs:
  get-values:
    uses: ./.github/workflows/get-values.yaml

  pre-commit:
    needs: [ get-values ]
    uses: ./.github/workflows/pre-commit.yaml
    with:
      python-version: {% endraw %}{{ python_version }}{% raw %}

  ephemeral-test:
    uses: ./.github/workflows/pulumi-aws.yml
    if: github.event_name == 'pull_request' || github.event_name == 'merge_group'
    needs: [ pre-commit, get-values ]
    with:
      AWS_REGION: {% endraw %}{{ aws_region_for_stack }}{% raw %}
      PULUMI_STACK_NAME: test-${{ needs.get-values.outputs.pr-short-num }}
      PYTHON_VERSION: {% endraw %}{{ python_version }}{% raw %}
      PROJECT_DIR: ./infrastructure
      DEPLOY_SCRIPT_MODULE_NAME: infra
      PULUMI_PREVIEW: true
      PREVIEW_ROLE_NAME: InfraPreview--{% endraw %}{{ repo_name }}{% raw %}
      PULUMI_UP_ROLE_NAME: InfraDeploy--{% endraw %}{{ repo_name }}{% raw %}
      PULUMI_UP: true
      PULUMI_DESTROY: true
      AWS_ACCOUNT_ID: "{% endraw %}{{ aws_test_account_id }}{% raw %}"

  pulumi-staging:
    uses: ./.github/workflows/pulumi-aws.yml
    needs: [ pre-commit ]
    with:
      AWS_REGION: {% endraw %}{{ aws_region_for_stack }}{% raw %}
      PULUMI_STACK_NAME: staging
      PYTHON_VERSION: {% endraw %}{{ python_version }}{% raw %}
      PROJECT_DIR: ./infrastructure
      DEPLOY_SCRIPT_MODULE_NAME: infra
      PULUMI_PREVIEW: true
      PREVIEW_ROLE_NAME: InfraPreview--{% endraw %}{{ repo_name }}{% raw %}
      PULUMI_UP: ${{ github.ref == 'refs/heads/main' }}
      PULUMI_UP_ROLE_NAME: InfraDeploy--{% endraw %}{{ repo_name }}{% raw %}
      AWS_ACCOUNT_ID: "{% endraw %}{{ aws_staging_account_id }}{% raw %}"

  pulumi-prod:
    uses: ./.github/workflows/pulumi-aws.yml
    if: github.event_name == 'pull_request' || github.event_name == 'merge_group' || github.ref == 'refs/heads/main'
    needs: [ pulumi-staging ]
    with:
      AWS_REGION: {% endraw %}{{ aws_region_for_stack }}{% raw %}
      PULUMI_STACK_NAME: prod
      PYTHON_VERSION: {% endraw %}{{ python_version }}{% raw %}
      PROJECT_DIR: ./infrastructure
      DEPLOY_SCRIPT_MODULE_NAME: infra
      PULUMI_PREVIEW: true
      PREVIEW_ROLE_NAME: InfraPreview--{% endraw %}{{ repo_name }}{% raw %}
      PULUMI_UP: ${{ github.ref == 'refs/heads/main' }}
      PULUMI_UP_ROLE_NAME: InfraDeploy--{% endraw %}{{ repo_name }}{% raw %}
      AWS_ACCOUNT_ID: "{% endraw %}{{ aws_production_account_id }}{% raw %}"

  required-check:
    runs-on: {% endraw %}{{ gha_linux_runner }}{% raw %}
    needs: [ get-values, ephemeral-test, pulumi-staging, pulumi-prod ]
    if: always()
    steps:
      - name: Show job status
        run: |
          echo ${{ needs.pulumi-staging.result }}
          echo ${{ needs.get-values.result }}
          echo ${{ needs.ephemeral-test.result }}
          echo ${{ needs.pulumi-prod.result }}
      - name: fail if prior job failure
        if: needs.pulumi-staging.result != 'success' || (needs.ephemeral-test.result != 'success' && needs.ephemeral-test.result != 'skipped') || (needs.pulumi-prod.result != 'success' && needs.pulumi-prod.result != 'skipped')
        run: |
          exit 1
      - name: Mark updated dependabot hash commit as succeeded
        if: ${{ needs.get-values.outputs.dependabot-commit-created == 'true' && github.event_name == 'push' }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh api \
            -X POST -H "Accept: application/vnd.github.v3+json" \
            "/repos/${{ github.repository }}/statuses/${{ needs.get-values.outputs.new-dependabot-sha }}" \
            -f state=success -f context="required-check" -f description="Initial CI run passed" \
            -f target_url="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"{% endraw %}
